Started by GitHub push by Lemax-Dev
Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/1-build-pipeline/1.1-build-pipeline-jobs/level-1-build-server
using credential e80fc1e6-135f-47cd-b9a4-b1075d8d5963
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Lemax-Dev/infrastructure-repo.git # timeout=10
Fetching upstream changes from https://github.com/Lemax-Dev/infrastructure-repo.git
 > git --version # timeout=10
using GIT_ASKPASS to set credentials 
 > git fetch --tags --progress https://github.com/Lemax-Dev/infrastructure-repo.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision a8b5fc36058e88affe3208ea991e42ac61d0a607 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f a8b5fc36058e88affe3208ea991e42ac61d0a607 # timeout=10
Commit message: "Update main.tf"
 > git rev-list --no-walk d685e9e95e2d4615375302f46d9b6543bddae0a1 # timeout=10
[level-1-build-server] $ /bin/sh -xe /tmp/jenkins2370631630771928844.sh
+ echo '==============Terraform Init=============='
==============Terraform Init==============
+ terraform init

[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.aws: version = "~> 2.43"

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
+ echo '==============Terraform Plan=============='
==============Terraform Plan==============
+ terraform plan
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1maws_instance.fa-bookingteam-dev-01: Refreshing state... [id=i-099304cd1582d9161][0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_instance.fa-bookingteam-dev-01[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "fa-bookingteam-dev-01" {
      [32m+[0m [0m[1m[0mami[0m[0m                          = "ami-0bebb29f43699dc36"
      [32m+[0m [0m[1m[0marn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m            = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                = "t2.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                     = "lemaxdevkey"
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m            = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                         = {
          [32m+[0m [0m"Name" = "fa-bookingteam-dev-01"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m       = [
          [32m+[0m [0m"sg-0008be08e1a39844f",
        ]

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = true
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = 15
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

+ echo '==============Terraform Apply=============='
==============Terraform Apply==============
+ terraform apply -auto-approve
[0m[1maws_instance.fa-bookingteam-dev-01: Refreshing state... [id=i-099304cd1582d9161][0m
[0m[1maws_instance.fa-bookingteam-dev-01: Creating...[0m[0m
[0m[1maws_instance.fa-bookingteam-dev-01: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.fa-bookingteam-dev-01: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.fa-bookingteam-dev-01: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.fa-bookingteam-dev-01: Still creating... [40s elapsed][0m[0m
[0m[1maws_instance.fa-bookingteam-dev-01: Creation complete after 41s [id=i-0594ed0b72d6e5c69][0m[0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.[0m
+ echo '==============Git status=============='
==============Git status==============
+ git status
# HEAD detached at a8b5fc3
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   terraform.tfstate
#	modified:   terraform.tfstate.backup
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	.terraform/plugins/linux_amd64/
no changes added to commit (use "git add" and/or "git commit -a")
+ echo '==============Git Set Up=============='
==============Git Set Up==============
+ echo '==============Git Add=============='
==============Git Add==============
+ git add .
+ echo '==============Git Commit=============='
==============Git Commit==============
+ git commit -m 'Jenkins CI/CD automated run'
[detached HEAD f11a8cf] Jenkins CI/CD automated run
 4 files changed, 32 insertions(+), 27 deletions(-)
 create mode 100755 .terraform/plugins/linux_amd64/lock.json
 create mode 100755 .terraform/plugins/linux_amd64/terraform-provider-aws_v2.43.0_x4
+ echo '==============Git Push=============='
==============Git Push==============
using credential e80fc1e6-135f-47cd-b9a4-b1075d8d5963
Pushing HEAD to branch master at repo origin
 > git --version # timeout=10
using GIT_ASKPASS to set credentials 
 > git push https://github.com/Lemax-Dev/infrastructure-repo.git HEAD:master # timeout=10
ERROR: Failed to push branch master to origin
hudson.plugins.git.GitException: Command "git push https://github.com/Lemax-Dev/infrastructure-repo.git HEAD:master" returned status code 1:
stdout: 
stderr: remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.        
remote: error: Trace: 76f12689a94671d9ec2eca8a5ffdf742        
remote: error: See http://git.io/iEPt8g for more information.        
remote: error: File .terraform/plugins/linux_amd64/terraform-provider-aws_v2.43.0_x4 is 132.86 MB; this exceeds GitHub's file size limit of 100.00 MB        
To https://github.com/Lemax-Dev/infrastructure-repo.git
 ! [remote rejected] HEAD -> master (pre-receive hook declined)
error: failed to push some refs to 'https://github.com/Lemax-Dev/infrastructure-repo.git'

	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2372)
	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1985)
	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$500(CliGitAPIImpl.java:80)
	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$8.execute(CliGitAPIImpl.java:2454)
	at hudson.plugins.git.GitPublisher.perform(GitPublisher.java:303)
	at hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:20)
	at hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:741)
	at hudson.model.AbstractBuild$AbstractBuildExecution.performAllBuildSteps(AbstractBuild.java:690)
	at hudson.model.Build$BuildExecution.post2(Build.java:186)
	at hudson.model.AbstractBuild$AbstractBuildExecution.post(AbstractBuild.java:635)
	at hudson.model.Run.execute(Run.java:1878)
	at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
	at hudson.model.ResourceController.execute(ResourceController.java:97)
	at hudson.model.Executor.run(Executor.java:427)
Build step 'Git Publisher' marked build as failure
Finished: FAILURE
